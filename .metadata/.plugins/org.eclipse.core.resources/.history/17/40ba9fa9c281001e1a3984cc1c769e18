/*
 * API_debounce.c
 *
 *  Created on: Nov 12, 2023
 *      Author: hollerller
 */

#include <stdio.h>
#include "API_debounce.h"
#include "main.h"
#include "stm32f4xx_hal.h"

typedef enum{
BUTTON_UP,
BUTTON_FALLING,
BUTTON_DOWN,
BUTTON_RAISING,
} debounceState_t;		// Save the FMS states

static const uint8_t DEBOUNCETIME = 40; // Debounce delay constant

delay_t debounceDelay;
tick_t initialDelay = DEBOUNCETIME;
static debounceState_t currentState;


void debounceFSM_init(){
	currentState = BUTTON_UP;
	delayInit(&debounceDelay, initialDelay);
}

void debounceFSM_update(){

	uint8_t buttonState = HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin);

	//bool_t debounceFinished = delayRead(&debounceDelay);


	switch (currentState){

	case BUTTON_UP:

		if (!buttonState) {
			currentState = BUTTON_FALLING;
			//delayWrite(&debounceDelay, 40);
			delayInit(&debounceDelay, 40);
		}
	break;

	case BUTTON_FALLING:

		if (delayRead(&debounceDelay)){
			if (buttonState) {
				currentState = BUTTON_DOWN;
				buttonPressed();
			} else {
				currentState = BUTTON_UP;
			}
		}

		break;

	case BUTTON_DOWN:

		if (buttonState) {
			currentState = BUTTON_RAISING;
			//delayWrite(&debounceDelay, 40);
			delayInit(&debounceDelay, 40);
		}

		break;


	case BUTTON_RAISING:

		if (delayRead(&debounceDelay)){
			if (!buttonState) {
				currentState = BUTTON_UP;
				buttonReleased();
			} else {
				currentState = BUTTON_DOWN;
			}
		}

		break;

	default:

		currentState = BUTTON_UP;

		break;

	}
}

void buttonPressed(){
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
}


void buttonReleased(){
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
}
